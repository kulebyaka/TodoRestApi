<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Autofac" Version="6.1.0"/>
        <PackageReference Include="Autofac.Configuration" Version="6.0.0"/>
        <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="7.1.0"/>
        <PackageReference Include="AutoMapper" Version="10.1.1"/>
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1"/>
        <PackageReference Include="FluentValidation" Version="9.5.3"/>
        <PackageReference Include="FluentValidation.AspNetCore" Version="9.5.3"/>
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="9.5.3"/>
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.4"/>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.1"/>
        <PackageReference Include="Newtonsoft.Json" Version="9.0.1"/>
        <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.1.1"/>
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.1.1"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**"/>
        <Content Include="ClientApp\package-lock.json"/>
        <Content Include="ClientApp\package.json"/>
        <Content Include="ClientApp\public\manifest.json"/>
        <Content Include="ClientApp\tsconfig.json"/>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
        <None Update="Properties\launchSettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
        </None>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\TodoApp.Infrastructure\TodoApp.Infrastructure.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <_ContentIncludedByDefault Remove="ClientApp\public\manifest.json"/>
        <_ContentIncludedByDefault Remove="ClientApp\build\asset-manifest.json"/>
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build"/>

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
